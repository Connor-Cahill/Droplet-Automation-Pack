#!/bin/bash

# assumes you are using a digital ocean VPS



# when calling function first input the github clone url
# then input your Digital Ocean VPS IP
# the third parameter is the directory name you wish to use
# this command assumes you already have docker on your
# digital ocean vps

dcDeploy() {
    ssh root@$1 \
        && git clone $2 $3 \
        && cd $3 \
        && docker-compose up -d \
        && "exit()"
}

# will ssh into server and start given app in background
# inputs:
# 1: digital ocean droplet IP
# 2: repo name (must be what it is named in your server)

dcRun() {
    ssh root@$1 'bash -s' < $HOME/bin/droplet-automation/run-that-thing.sh $2
}


# will deploy to a fresh digital ocean server
# installs docker / docker-compose and 
# may need this command ssh -o StrictHostKeyChecking=no root@$1
freshDockerDroplet() {
    ssh root@$1 'bash -s' < $HOME/bin/droplet-automation/fresh-docker-droplet.sh
}


# will setup fresh droplet with docker and docker-compose
# then clone your app, secure copy over your .env into the VPS
# and docker-compose up -d to ship app
dockerFreshDeploy() {

    VPS_IP=$1
    PROJECT=$2
    REPO_NAME=$3
    ENV_FILE=$4

    ssh root@$VPS_IP 'bash -s' < $HOME/bin/droplet-automation/docker-deploy-fresh.sh $VPS_FILE $PROJECT $REPO_NAME $ENV_FILE

    scp $ENV_FILE root@$VPS_IP:$HOME/$REPO_NAME \
        && ssh root@$1 'bash -s' < cd $HOME/$REPO_NAME && docker-compose up -d
}

